package kr.co.bookking.controller;


import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.co.bookking.VO.UserVO;
import kr.co.bookking.service.UserService;

@Controller
@RequestMapping("/user")
public class UserController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	
	@Autowired
	UserService userService;
	
	//loginView
	@RequestMapping(value="/userLogin", method =RequestMethod.GET)
	public String goLoginView(Model model){
		model.addAttribute("contentFile", "login/login.jsp");
		return "home";
	}
	
	@RequestMapping(value="/loginAction", method=RequestMethod.POST)
	public String login(HttpServletResponse response, HttpServletRequest request, Model model, String loginId, String loginPw) throws IOException{
		String result = userService.login(loginId, loginPw);
		
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		
		if(result != null){
			HttpSession session = request.getSession();
			session.setAttribute("loginId", result);
			model.addAttribute("session",loginId );
		}else{
			PrintWriter writer = response.getWriter();
			     writer.println("<script>");
			     writer.println("alert('아이디 또는 패스워드가 일치하지 않습니다.');");
			     writer.println("</script>");
			     writer.flush();
			     model.addAttribute("contentFile", "login/login.jsp");
			     
			     return "home";

		}
		return "home";
	}
	
	@RequestMapping(value="/logout")
	public String logout(HttpServletRequest request){
		
		HttpSession session = request.getSession(false);
		session.invalidate();
		
		return "home";
	}
	

	
	/*회원가입*/
	@RequestMapping(value="/userSignup", method =RequestMethod.POST)
	public String signup(Model model, UserVO user, HttpServletResponse response) throws Exception{
		int result = userService.signup(user);
		
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		PrintWriter writer = response.getWriter();
		
		if(result == 1){
		     writer.println("<script>");
		     writer.println("alert('회원가입 완료.');");
		     writer.println("</script>");
		     writer.flush();
		}else{
			writer.println("<script>");
		     writer.println("alert('회원가입 실패');");
		     writer.println("</script>");
		     writer.flush();
		     return "";
		}
		return "home";
	}
	
	/*아이디 중복확인*/
	@RequestMapping(value="/userDuplication")
	@ResponseBody
	public String isDuplication(String userId, Model model) throws Exception{
//		UserVO vo= new UserVO();
		String duplicationId = userService.isDuplication(userId);
//		vo.setUserId(duplicationId);
		return "{\"id\":\""+duplicationId+"\"}";
	}
	
	
	

}
